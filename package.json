{
  "name": "coc-cairo",
  "version": "0.0.5",
  "description": "A coc.nvim wrapper for the Cairo language server",
  "author": "Kevin Halliday <halliday.kevin7@gmail.com>",
  "repository": "https://github.com/kevinhalliday/coc-cairo",
  "license": "MIT",
  "main": "lib/index.js",
  "keywords": [
    "coc.nvim"
  ],
  "engines": {
    "coc": "^0.0.82"
  },
  "scripts": {
    "lint": "eslint src --ext ts",
    "clean": "rimraf lib",
    "watch": "node esbuild.js --watch",
    "build": "node esbuild.js",
    "prepare": "node esbuild.js"
  },
  "dependencies": {
    "cairo-ls": "^0.0.9"
  },
  "devDependencies": {
    "@types/node": "^18.0.3",
    "@typescript-eslint/eslint-plugin": "^5.13.0",
    "@typescript-eslint/parser": "^5.13.0",
    "coc.nvim": "^0.0.82",
    "esbuild": "^0.14.24",
    "eslint": "^8.10.0",
    "eslint-config-prettier": "^8.5.0",
    "eslint-plugin-prettier": "^4.0.0",
    "prettier": "^2.5.1",
    "rimraf": "^3.0.2",
    "typescript": "^4.6.2"
  },
  "activationEvents": [
    "*"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Cairo LS",
      "properties": {
        "cairols.highlightingCompiler": {
          "scope": "resource",
          "type": "string",
          "enum": [
            "autodetect",
            "cairo",
            "starknet"
          ],
          "default": "autodetect",
          "description": "Specifies which compiler to use for diagnostic highlighting."
        },
        "cairols.serverModule": {
          "scope": "resource",
          "type": "string",
          "description": "Absolute path to a language server Node module to use. Useful for testing new language server implementations with this extension."
        },
        "cairols.sourceDir": {
          "scope": "resource",
          "type": "string",
          "description": "The contracts source directory within your project, for example: src"
        },
        "cairols.disableHintValidation": {
          "scope": "resource",
          "type": "string",
          "description": "Disables hint validation for files that match the given pattern, for example: tests/**/*.cairo"
        },
        "cairols.useVenv": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Whether to use a Python virtual environment for running the Cairo/StarkNet compiler. Note: Nile's venv takes precedence over this option."
        },
        "cairols.venvCommand": {
          "scope": "resource",
          "type": "string",
          "default": ". ~/cairo_venv/bin/activate",
          "description": "If useVenv is true, this is the command used by the extension to source the virtual environment before running Cairo/StarkNet commands. Note: Nile's venv takes precedence over this option."
        },
        "cairols.nileUseVenv": {
          "scope": "resource",
          "type": "boolean",
          "default": true,
          "description": "Whether to use a Python virtual environment for running Nile."
        },
        "cairols.nileVenvCommand": {
          "scope": "resource",
          "type": "string",
          "default": ". env/bin/activate",
          "description": "If nileUseVenv is true, this is the command used by the extension to source the virtual environment before running Nile commands."
        },
        "cairols.cairoPath": {
          "scope": "resource",
          "type": "array",
          "default": [],
          "description": "Additional locations to search for cairo files."
        }
      }
    },
    "menus": {
      "explorer/context": [
        {
          "command": "nile.compile"
        },
        {
          "command": "nile.compile.all"
        },
        {
          "command": "nile.clean"
        },
        {
          "command": "pytest"
        }
      ],
      "editor/context": [
        {
          "command": "nile.compile"
        },
        {
          "command": "nile.compile.all"
        },
        {
          "command": "nile.clean"
        },
        {
          "command": "pytest"
        }
      ]
    },
    "commands": [
      {
        "command": "nile.compile",
        "category": "StarkNet Cairo language support",
        "title": "Nile - Compile this contract"
      },
      {
        "command": "nile.compile.all",
        "category": "StarkNet Cairo language support",
        "title": "Nile - Compile all"
      },
      {
        "command": "nile.clean",
        "category": "StarkNet Cairo language support",
        "title": "Nile - Clean"
      },
      {
        "command": "pytest",
        "category": "StarkNet Cairo language support",
        "title": "Run tests with pytest"
      }
    ]
  }
}
